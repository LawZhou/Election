[{"/Users/wangran/Desktop/GradLife/2020fall/APS1050/team project/election/Election/src/index.js":"1","/Users/wangran/Desktop/GradLife/2020fall/APS1050/team project/election/Election/src/reportWebVitals.js":"2","/Users/wangran/Desktop/GradLife/2020fall/APS1050/team project/election/Election/src/main/Layout.js":"3","/Users/wangran/Desktop/GradLife/2020fall/APS1050/team project/election/Election/src/main/AdminTab.js":"4","/Users/wangran/Desktop/GradLife/2020fall/APS1050/team project/election/Election/src/main/ElectionTab.js":"5","/Users/wangran/Desktop/GradLife/2020fall/APS1050/team project/election/Election/src/main/Election.js":"6","/Users/wangran/Desktop/GradLife/2020fall/APS1050/team project/election/Election/src/main/CreateElectionTab.js":"7"},{"size":507,"mtime":1607294406923,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1607274585976,"results":"10","hashOfConfig":"9"},{"size":1811,"mtime":1608969111692,"results":"11","hashOfConfig":"9"},{"size":656,"mtime":1608969111690,"results":"12","hashOfConfig":"9"},{"size":6904,"mtime":1609118918619,"results":"13","hashOfConfig":"9"},{"size":2904,"mtime":1609120701262,"results":"14","hashOfConfig":"9"},{"size":5224,"mtime":1609020874487,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"xqazdo",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/wangran/Desktop/GradLife/2020fall/APS1050/team project/election/Election/src/index.js",[],["32","33"],"/Users/wangran/Desktop/GradLife/2020fall/APS1050/team project/election/Election/src/reportWebVitals.js",[],"/Users/wangran/Desktop/GradLife/2020fall/APS1050/team project/election/Election/src/main/Layout.js",[],"/Users/wangran/Desktop/GradLife/2020fall/APS1050/team project/election/Election/src/main/AdminTab.js",[],"/Users/wangran/Desktop/GradLife/2020fall/APS1050/team project/election/Election/src/main/ElectionTab.js",["34","35"],"import { Table, Space, Button, Tabs } from \"antd\";\nimport React from \"react\";\nimport Election from \"./Election.js\";\nimport Elections from '../abis/Elections.json'\nimport Web3 from 'web3'\nimport payload from './payload.json'\nimport { Components } from \"antd/lib/date-picker/generatePicker\";\n\nconst { Column } = Table;\n\nconst { TabPane } = Tabs;\n\n\nclass ElectionTab extends React.Component {\n  newTabIndex = 0;\n\n\n  constructor(props)  {\n    super(props)\n    this.state={\n      activeKey:null,\n      panes: null,\n      account: '',\n      elections_data: [],\n      elections_contract: [],\n      candidates_data: [],\n    }\n    this.loadWeb3()\n    this.loadBlockchainData()\n  }\n\n\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n\n  updatePanes() {\n    console.log(this.state.elections_data)\n    this.initialPanes = [\n      {\n        title: \"Home\",\n        content: (\n          <Table dataSource={this.state.elections_data}>\n            <Column title=\"Title\" dataIndex=\"title\" key=\"title\" />\n            <Column\n              title=\"Description\"\n              dataIndex=\"description\"\n              key=\"description\"\n            />\n            <Column title=\"End Time\" dataIndex=\"endtime\" key=\"endtime\" />\n            <Column\n              title=\"Action\"\n              key=\"action\"\n              render={(text, record) => (\n                <Space size=\"middle\">\n                  <Button type=\"primary\" ghost onClick={() => this.add(record)}>\n                    Participate\n                  </Button>\n                </Space>\n              )}\n            />\n          </Table>\n        ),\n        key: \"1\",\n        closable: false,\n      },\n    ];\n    this.setState({activeKey: this.initialPanes[0].key, panes: this.initialPanes}, () => {\n      console.log(this.state)\n    })\n    \n  }\n  loadBlockchainData = async () => {\n    const web3 = window.web3\n    // Load account\n    const accounts = await web3.eth.getAccounts()\n    \n    this.setState({ account: accounts[0] })\n    // Network ID\n    const networkId = await web3.eth.net.getId()\n    const networkData = Elections.networks[networkId]\n    if(networkData) {\n      const elections_contract = new web3.eth.Contract(Elections.abi, networkData.address)\n      this.setState({ elections_contract: elections_contract }, () => {\n        this.loadJson();\n      })\n    }\n    \n  }\n\n  loadJson = async () => {\n    // const token = await this.elections_contract.methods.getElection().send({from: this.account});\n    var election_count = await this.state.elections_contract.methods.election_count.call().call();\n    var i;\n    for (i = 0; i < election_count; i++) {\n      var candidateObj = [];\n      var oneElectionData = await this.state.elections_contract.methods.getElection(i).call();\n      for (var j = 0; j < oneElectionData[4]; j++) {\n        var candidateData = await this.state.elections_contract.methods.getCandidate(i, j).call();\n        var str = window.web3.utils.toAscii(candidateData[1]);\n        // let oneCandidateObj = { name: str, votes: candidateData[2], total: 0};\n        let oneCandidateObj = { name: str};\n        candidateObj.push(oneCandidateObj);\n        console.log(candidateObj)\n      }\n      let oneElection = {\n        key: oneElectionData[0],\n        title: String(oneElectionData[1]),\n        description: String(oneElectionData[2]),\n        endtime: String(oneElectionData[3]),\n        candidates: candidateObj,   \n      }\n      this.setState({elections_data: [...this.state.elections_data, oneElection]})\n      console.log(this.state.elections_data)     \n    }\n    this.updatePanes()\n\n    // var token = await this.elections_contract.methods.elections[0].call().call();\n    // var token = await this.state.elections_contract.methods.getElection().call();\n    // console.log(String(token[0]))\n    // console.log(String(token[1]))\n    // console.log(String(token[2]))\n    // var token2 = await this.elections_contract.methods.getCandidate().call();\n\n    // let oneElection = {\n    //   key: token[0],\n    //     title: String(token[1]),\n    //     description: String(token[2]),\n    //     endtime: String(token[3]),\n    //     candidates: [\n    //       { name: \"1\", votes: 10, total: 70 },\n    //       { name: \"2\", votes: 20, total: 70 },\n    //       { name: \"3\", votes: 40, total: 70 },\n    //     ],\n    // }\n    // this.setState({elections_data: [...this.state.elections_data, oneElection]})\n    // console.log(this.state.elections_data)\n    // this.updatePanes()\n\n    // electionsData.push(oneElection);\n    // this.jsonData = JSON.stringify(electionsData);\n    // let dataStr = JSON.stringify(electionsData);\n    // let dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);\n    // let exportFileDefaultName = 'data.json';\n    // let linkElement = document.createElement('a');\n    // linkElement.setAttribute('href', dataUri);\n    // linkElement.setAttribute('download', exportFileDefaultName);\n    // linkElement.click();\n\n  }\n\n  openTab = (record) => {\n    console.log(\"hi\");\n    console.log(record.title);\n  };\n\n  onChange = (activeKey) => {\n    this.setState({ activeKey });\n  };\n\n  onEdit = (targetKey, action) => {\n    this[action](targetKey);\n  };\n\n  add = (record) => {\n    const { panes } = this.state;\n    const activeKey = `newTab${this.newTabIndex++}`;\n    const newPanes = [...panes];\n    newPanes.push({\n      title: record.title,\n      content: <Election record={record}></Election>,\n      key: activeKey,\n      closable: true,\n    });\n    this.setState({\n      panes: newPanes,\n      activeKey,\n    });\n  };\n\n  remove = (targetKey) => {\n    const { panes, activeKey } = this.state;\n    let newActiveKey = activeKey;\n    let lastIndex;\n    panes.forEach((pane, i) => {\n      if (pane.key === targetKey) {\n        lastIndex = i - 1;\n      }\n    });\n    const newPanes = panes.filter((pane) => pane.key !== targetKey);\n    if (newPanes.length && newActiveKey === targetKey) {\n      if (lastIndex >= 0) {\n        newActiveKey = newPanes[lastIndex].key;\n      } else {\n        newActiveKey = newPanes[0].key;\n      }\n    }\n    this.setState({\n      panes: newPanes,\n      activeKey: newActiveKey,\n    });\n  };\n\n  render() {\n    console.log(this.state)\n    const { panes, activeKey } = this.state;\n    return (\n      <Tabs\n        hideAdd\n        type=\"editable-card\"\n        onChange={this.onChange}\n        onEdit={this.onEdit}\n        activeKey={activeKey}\n      >\n        {panes && panes.map((pane) => (\n          <TabPane tab={pane.title} key={pane.key} closable={pane.closable}>\n            {pane.content}\n          </TabPane>\n        ))}\n      </Tabs>\n    );\n  }\n}\n\nexport default ElectionTab;\n","/Users/wangran/Desktop/GradLife/2020fall/APS1050/team project/election/Election/src/main/Election.js",[],"/Users/wangran/Desktop/GradLife/2020fall/APS1050/team project/election/Election/src/main/CreateElectionTab.js",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":6,"column":8,"nodeType":"42","messageId":"43","endLine":6,"endColumn":15},{"ruleId":"40","severity":1,"message":"44","line":7,"column":10,"nodeType":"42","messageId":"43","endLine":7,"endColumn":20},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-unused-vars","'payload' is defined but never used.","Identifier","unusedVar","'Components' is defined but never used.","no-global-assign","no-unsafe-negation"]