[{"/Users/wangran/Desktop/GradLife/2020fall/APS1050/team project/election/Election/src/index.js":"1","/Users/wangran/Desktop/GradLife/2020fall/APS1050/team project/election/Election/src/reportWebVitals.js":"2","/Users/wangran/Desktop/GradLife/2020fall/APS1050/team project/election/Election/src/main/Layout.js":"3","/Users/wangran/Desktop/GradLife/2020fall/APS1050/team project/election/Election/src/main/elections.js":"4","/Users/wangran/Desktop/GradLife/2020fall/APS1050/team project/election/Election/src/main/electionsTry.js":"5","/Users/wangran/Desktop/GradLife/2020fall/APS1050/team project/election/Election/src/main/choices.js":"6","/Users/wangran/Desktop/GradLife/2020fall/APS1050/team project/election/Election/src/main/pieChart.js":"7"},{"size":507,"mtime":1607294406923,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1607274585976,"results":"10","hashOfConfig":"9"},{"size":2430,"mtime":1607542766529,"results":"11","hashOfConfig":"9"},{"size":2193,"mtime":1607465996706,"results":"12","hashOfConfig":"9"},{"size":5967,"mtime":1607542747034,"results":"13","hashOfConfig":"9"},{"size":1103,"mtime":1607542692618,"results":"14","hashOfConfig":"9"},{"size":766,"mtime":1607542741187,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1uq7usz",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/wangran/Desktop/GradLife/2020fall/APS1050/team project/election/Election/src/index.js",[],["32","33"],"/Users/wangran/Desktop/GradLife/2020fall/APS1050/team project/election/Election/src/reportWebVitals.js",[],"/Users/wangran/Desktop/GradLife/2020fall/APS1050/team project/election/Election/src/main/Layout.js",["34","35","36","37","38"],"/Users/wangran/Desktop/GradLife/2020fall/APS1050/team project/election/Election/src/main/elections.js",["39","40","41","42"],"/Users/wangran/Desktop/GradLife/2020fall/APS1050/team project/election/Election/src/main/electionsTry.js",["43","44","45","46"],"import React, { useContext, useState, useEffect, useRef } from 'react';\nimport { Table, Input, Button, Popconfirm, Form, Space, Tooltip } from 'antd';\nimport pieChart from './thisElection'\n\nconst EditableContext = React.createContext();\n\nconst EditableRow = ({ index, ...props }) => {\n  const [form] = Form.useForm();\n  return (\n    <Form form={form} component={false}>\n      <EditableContext.Provider value={form}>\n        <tr {...props} />\n      </EditableContext.Provider>\n    </Form>\n  );\n};\n\nconst EditableCell = ({\n  title,\n  editable,\n  children,\n  dataIndex,\n  record,\n  handleSave,\n  ...restProps\n}) => {\n  const [editing, setEditing] = useState(false);\n  const inputRef = useRef();\n  const form = useContext(EditableContext);\n  useEffect(() => {\n    if (editing) {\n      inputRef.current.focus();\n    }\n  }, [editing]);\n\n  const toggleEdit = () => {\n    setEditing(!editing);\n    form.setFieldsValue({\n      [dataIndex]: record[dataIndex],\n    });\n  };\n\n  const save = async (e) => {\n    try {\n      const values = await form.validateFields();\n      toggleEdit();\n      handleSave({ ...record, ...values });\n    } catch (errInfo) {\n      console.log('Save failed:', errInfo);\n    }\n  };\n\n  let childNode = children;\n\n  if (editable) {\n    childNode = editing ? (\n      <Form.Item\n        style={{\n          margin: 0,\n        }}\n        name={dataIndex}\n        rules={[\n          {\n            required: true,\n            message: `${title} is required.`,\n          },\n        ]}\n      >\n        <Input ref={inputRef} onPressEnter={save} onBlur={save} />\n      </Form.Item>\n    ) : (\n      <div\n        className=\"editable-cell-value-wrap\"\n        style={{\n          paddingRight: 24,\n        }}\n        onClick={toggleEdit}\n      >\n        {children}\n      </div>\n    );\n  }\n\n  return <td {...restProps}>{childNode}</td>;\n};\n\nclass EditableTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.columns = [\n        {\n            title: 'Election Name',\n            dataIndex: 'name',\n            key: 'name',\n            render: text => <a onClick={pieChart}>{text}</a>,\n          },\n          {\n            title: 'Description',\n            dataIndex: 'description',\n            key: 'description',\n            ellipsis: {\n                showTitle: false,\n              },\n            render: description => (\n                <Tooltip placement=\"topLeft\" title={description}>\n                  {description}\n                </Tooltip>\n              ),\n          },\n          {\n            title: 'Votes Cast',\n            dataIndex: 'votes',\n            key: 'votes',\n          },\n          {\n            title: 'State',\n            dataIndex: 'state',\n            key: 'state',\n          },\n      {\n        title: 'operation',\n        dataIndex: 'operation',\n        render: (text, record) =>\n          this.state.dataSource.length >= 1 ? (\n            <Space size=\"middle\">\n                <a>End</a> \n                \n                <Popconfirm title=\"Sure to delete?\" onConfirm={() => this.handleDelete(record.key)}>\n                <a>Delete</a>\n                </Popconfirm>\n            </Space>  \n          ) : null,\n          \n      },\n    ];\n    this.state = {\n      dataSource: [\n        {\n            key: '1',\n            name: 'Best restaurant',\n            description: 'This is an election about the best restaurants in Toronto',\n            votes: 23,\n            state: 'In progress',\n          },\n          {\n            key: '2',\n            name: 'Best bookstore',\n            description: 'This is an election about the best bookstores in Toronto',\n            votes: 14,\n            state: 'In progress',\n          },\n          {\n            key: '3',\n            name: 'Best supermarket',\n            description: 'This is an election about the best supermarkets in Toronto',\n            votes: 123,\n            state: 'Ended',\n          },\n      ],\n      count: 3,\n    };\n  }\n\n  handleDelete = (key) => {\n    const dataSource = [...this.state.dataSource];\n    this.setState({\n      dataSource: dataSource.filter((item) => item.key !== key),\n    });\n  };\n  handleAdd = () => {\n    const { count, dataSource } = this.state;\n    const newData = {\n      key: count,\n      name: `Edward King ${count}`,\n      age: 32,\n      address: `London, Park Lane no. ${count}`,\n    };\n    this.setState({\n      dataSource: [...dataSource, newData],\n      count: count + 1,\n    });\n  };\n  handleSave = (row) => {\n    const newData = [...this.state.dataSource];\n    const index = newData.findIndex((item) => row.key === item.key);\n    const item = newData[index];\n    newData.splice(index, 1, { ...item, ...row });\n    this.setState({\n      dataSource: newData,\n    });\n  };\n\n  render() {\n    const { dataSource } = this.state;\n    const components = {\n      body: {\n        row: EditableRow,\n        cell: EditableCell,\n      },\n    };\n    const columns = this.columns.map((col) => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return {\n        ...col,\n        onCell: (record) => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: this.handleSave,\n        }),\n      };\n    });\n    return (\n      <div>\n        <Button\n          onClick={this.handleAdd}\n          type=\"primary\"\n          style={{\n            marginBottom: 16,\n          }}\n        >\n          Add a row\n        </Button>\n        <Table\n          components={components}\n          rowClassName={() => 'editable-row'}\n          bordered\n          dataSource={dataSource}\n          columns={columns}\n          onRowClick={(record) => ({\n                onClick: () => { pieChart(record.key); }\n            })}\n          getTrProps={(state, rowInfo) => ({\n          onClick: e => console.log('A row was clicked!')\n        })}\n        />\n      </div>\n    );\n  }\n}\n\nexport default EditableTable\n// ReactDOM.render(<EditableTable />, mountNode);","/Users/wangran/Desktop/GradLife/2020fall/APS1050/team project/election/Election/src/main/choices.js",["47"],"/Users/wangran/Desktop/GradLife/2020fall/APS1050/team project/election/Election/src/main/pieChart.js",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":5,"column":17,"nodeType":"54","messageId":"55","endLine":5,"endColumn":26},{"ruleId":"52","severity":1,"message":"56","line":5,"column":28,"nodeType":"54","messageId":"55","endLine":5,"endColumn":36},{"ruleId":"52","severity":1,"message":"57","line":8,"column":8,"nodeType":"54","messageId":"55","endLine":8,"endColumn":16},{"ruleId":"52","severity":1,"message":"58","line":9,"column":8,"nodeType":"54","messageId":"55","endLine":9,"endColumn":15},{"ruleId":"52","severity":1,"message":"59","line":60,"column":7,"nodeType":"54","messageId":"55","endLine":60,"endColumn":24},{"ruleId":"52","severity":1,"message":"57","line":4,"column":8,"nodeType":"54","messageId":"55","endLine":4,"endColumn":16},{"ruleId":"60","severity":1,"message":"61","line":12,"column":21,"nodeType":"62","endLine":12,"endColumn":24},{"ruleId":"60","severity":1,"message":"61","line":65,"column":9,"nodeType":"62","endLine":65,"endColumn":12},{"ruleId":"60","severity":1,"message":"61","line":66,"column":9,"nodeType":"62","endLine":66,"endColumn":12},{"ruleId":"52","severity":1,"message":"63","line":2,"column":24,"nodeType":"54","messageId":"55","endLine":2,"endColumn":30},{"ruleId":"60","severity":1,"message":"61","line":95,"column":29,"nodeType":"62","endLine":95,"endColumn":51},{"ruleId":"60","severity":1,"message":"61","line":126,"column":17,"nodeType":"62","endLine":126,"endColumn":20},{"ruleId":"60","severity":1,"message":"61","line":129,"column":17,"nodeType":"62","endLine":129,"endColumn":20},{"ruleId":"52","severity":1,"message":"64","line":1,"column":17,"nodeType":"54","messageId":"55","endLine":1,"endColumn":22},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'pieChart' is defined but never used.","'choices' is defined but never used.","'calculateTimeLeft' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Button' is defined but never used.","'Input' is defined but never used.","no-global-assign","no-unsafe-negation"]